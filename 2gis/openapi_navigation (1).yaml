openapi: 3.0.3
info:
  title: 2GIS Navigation APIs
  version: 1.0.0
  description: |
    This OpenAPI document describes several 2GIS navigation‑related HTTP services used
    to build routes, reconstruct recorded tracks and estimate device geolocation.
    
    * **Routing API new** – builds road or pedestrian routes between points with optional filters and output modes【649492001241889†L225-L233】.
    * **Map Matching API** – takes recorded GPS points and returns a corrected route that follows the road network【552528751510017†L176-L181】.
    * **Radar API** – estimates device geolocation using information about Wi‑Fi access points and cellular towers when GNSS data is unreliable【687840751713957†L176-L186】.
  contact:
    name: 2GIS Support
    url: https://help.2gis.com
servers:
  - url: https://routing.api.2gis.com
    description: Default 2GIS routing & map matching API server
  - url: https://radar.api.2gis.com
    description: Radar geolocation API server
paths:
  "/routing/7.0.0/global":
    post:
      summary: Build a route between points
      description: |
        Calculates a route for a specified transport type (driving, walking, bicycle, etc.)
        through a list of waypoints. At least two points are required: a start and an end.
        The response may include a simplified summary or a detailed geometry with maneuvers.
        Mandatory query parameter `key` must contain your directions API access key【649492001241889†L225-L233】.
      operationId: buildRoute
      parameters:
        - name: key
          in: query
          required: true
          description: API access key issued by 2GIS Platform Manager
          schema:
            type: string
      requestBody:
        required: true
        description: Route calculation parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                points:
                  type: array
                  minItems: 2
                  description: >
                    Ordered list of points that define the route. Each point should specify
                    longitude and latitude, a point type (`walking`, `stop`, or `pref`) and
                    optional flags such as `start`. For transport routes a maximum of 10 points
                    (including start and end) is allowed; for pedestrian routes a maximum of
                    5 points is allowed【649492001241889†L280-L304】.
                  items:
                    $ref: '#/components/schemas/RoutePoint'
                transport:
                  type: string
                  description: >
                    Mode of transportation. Default is `driving` (car). Valid values
                    include `driving`, `taxi`, `bicycle`, `scooter`, `motorcycle`,
                    `truck`, and `walking`.
                  example: driving
                filters:
                  type: array
                  description: >
                    List of road types to exclude from the route. Supported values
                    include `dirt_road`, `toll_road`, and `ferry`【649492001241889†L535-L541】.
                  items:
                    type: string
                output:
                  type: string
                  description: >
                    Specifies the amount of detail returned. `summary` returns only
                    total distance and time, while `detailed` returns full route geometry【649492001241889†L541-L545】.
                  enum: [summary, detailed]
                  default: detailed
                locale:
                  type: string
                  description: "Language code for textual descriptions of maneuvers. Example values: `en`, `ru`."
                  default: en
                avoid:
                  type: array
                  description: >
                    Optional list of additional road types or area identifiers to avoid.
                  items:
                    type: string
              required:
                - points
      responses:
        "200":
          description: Route calculation succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: true
                    description: Optional message or null
                  query:
                    type: object
                    description: Echo of the request parameters
                  result:
                    type: array
                    description: >
                      List of one or more routes. Each item contains route summary,
                      maneuvers, segments, and geometry.
                    items:
                      $ref: '#/components/schemas/RouteResult'
        "400":
          description: Invalid request parameters
        "401":
          description: Authentication error (invalid key)
        "500":
          description: Internal server error
  "/map_matching/1.0.0":
    post:
      summary: Reconstruct a recorded route from GPS points
      description: |
        Matches a sequence of recorded positions to the road network. Useful to
        correct GPS noise and infer the actual travelled path【552528751510017†L176-L181】.
        Requires an API key in the query string. The body must include a `query`
        array of points with timestamps and optional speed and azimuth【552528751510017†L208-L225】.
      operationId: mapMatch
      parameters:
        - name: key
          in: query
          required: true
          description: API access key issued by 2GIS Platform Manager
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: array
                  description: >
                    Sequential list of recorded route points. Each point must include
                    at least longitude (`lon`), latitude (`lat`) and the Unix time
                    (`utc`) when the sample was recorded. Optional fields are `speed`
                    and `azimuth`【552528751510017†L220-L225】.
                  minItems: 2
                  maxItems: 1000
                  items:
                    $ref: '#/components/schemas/RecordedPoint'
              required:
                - query
      responses:
        "200":
          description: Route reconstructed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  distance:
                    type: number
                    format: double
                    description: Total route length in meters
                  duration:
                    type: number
                    format: double
                    description: Estimated travel time in seconds
                  edges:
                    type: array
                    description: List of road segments used in the matched route
                    items:
                      $ref: '#/components/schemas/MatchedEdge'
                  query:
                    type: array
                    description: Original points with matched positions and segment IDs
                    items:
                      $ref: '#/components/schemas/MatchedQueryPoint'
                  route:
                    type: string
                    description: WKT `LINESTRING` geometry representing the matched route
                  status:
                    type: string
                    description: Status of the response (e.g., `OK`)
        "400":
          description: Invalid request
        "401":
          description: Authentication error
        "500":
          description: Server error
  "/v2/geolocation":
    post:
      summary: Determine device geolocation via Radar API
      description: |
        Estimates device position using information about observed Wi‑Fi access points,
        cellular towers and optional GNSS (GPS) data【687840751713957†L176-L190】. This service
        is designed for situations when satellite signal is weak; accuracy is typically
        150–200 m【687840751713957†L176-L187】.
      operationId: getGeolocation
      servers:
        - url: https://radar.api.2gis.com
          description: Base URL for the Radar API
      parameters:
        - name: key
          in: query
          required: true
          description: API access key for Radar API
          schema:
            type: string
      requestBody:
        required: true
        description: Observed radio environment and optional GNSS data
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionUUID:
                  type: string
                  format: uuid
                  description: Unique identifier of the current positioning session
                captureTimestampUnix:
                  type: integer
                  description: Unix timestamp when the data was captured【687840751713957†L222-L229】
                gnssLocation:
                  $ref: '#/components/schemas/GnssLocation'
                mobileNetwork:
                  $ref: '#/components/schemas/MobileNetwork'
                wifiAccessPoints:
                  type: array
                  description: Observed Wi‑Fi access points【687840751713957†L248-L263】
                  items:
                    $ref: '#/components/schemas/WifiAccessPoint'
              required:
                - sessionUUID
                - captureTimestampUnix
      responses:
        "200":
          description: Geolocation estimated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: HTTP status code (200 for success)
                  state:
                    type: string
                    description: Processing state (`geoposition_located` or other)
                  location:
                    type: object
                    description: Estimated device location
                    properties:
                      longitude:
                        type: number
                        format: double
                      latitude:
                        type: number
                        format: double
                      accuracy:
                        type: number
                        description: Estimated accuracy radius in meters【687840751713957†L176-L187】
                        format: double
        "400":
          description: Bad request (missing or malformed data)
        "401":
          description: Authentication error
        "500":
          description: Internal server error
components:
  schemas:
    RoutePoint:
      type: object
      description: Point used in a routing request
      properties:
        lon:
          type: number
          format: double
          description: Longitude in decimal degrees
        lat:
          type: number
          format: double
          description: Latitude in decimal degrees
        type:
          type: string
          description: Point type (`walking`, `stop`, or `pref`)
          enum: [walking, stop, pref]
        start:
          type: boolean
          description: Marks this point as the starting point (optional)
      required:
        - lon
        - lat
        - type
    RouteResult:
      type: object
      description: Detailed description of a route returned by the Routing API
      properties:
        algorithm:
          type: string
          description: Name of the routing algorithm used (e.g., `with traffic jams`)
        id:
          type: string
          description: Unique identifier of the route
        begin_pedestrian_path:
          type: object
          nullable: true
          description: Optional pedestrian segment at the beginning of the route
          properties:
            geometry:
              type: object
              description: Geometry of the pedestrian path
        end_pedestrian_path:
          type: object
          nullable: true
          description: Optional pedestrian segment at the end of the route
          properties:
            geometry:
              type: object
              description: Geometry of the pedestrian path
        maneuvers:
          type: array
          description: Ordered list of driving or walking instructions
          items:
            $ref: '#/components/schemas/Maneuver'
        filter_road_types:
          type: array
          description: List of road types that were excluded
          items:
            type: string
    Maneuver:
      type: object
      description: Single maneuver within a route
      properties:
        id:
          type: string
        comment:
          type: string
          description: Human‑readable description of the maneuver (e.g., `start`, `turn left`)
        icon:
          type: string
          description: Icon identifier representing the maneuver
        outcoming_path:
          type: object
          description: Description of the path segment following this maneuver
          properties:
            distance:
              type: number
              format: double
              description: Length of this segment in meters
            duration:
              type: number
              format: double
              description: Estimated duration in seconds
            geometry:
              type: array
              description: List of colored polyline fragments
              items:
                $ref: '#/components/schemas/SegmentGeometry'
        outcoming_path_comment:
          type: string
          description: Summary of this segment (e.g., `4.8 km straight`)
    SegmentGeometry:
      type: object
      description: Fragment of route geometry with style information
      properties:
        color:
          type: string
          description: Color classification (e.g., `fast`, `normal`)
        length:
          type: number
          format: double
          description: Length of this fragment in meters
        selection:
          type: string
          description: WKT `LINESTRING` describing the fragment geometry
        style:
          type: string
          description: Style classification (e.g., `normal`)
    RecordedPoint:
      type: object
      description: Single recorded GPS point sent to the Map Matching API
      properties:
        lon:
          type: number
          format: double
        lat:
          type: number
          format: double
        utc:
          type: integer
          description: Unix timestamp when the sample was recorded
        speed:
          type: number
          format: double
          nullable: true
          description: Speed in meters per second at this point
        azimuth:
          type: number
          format: double
          nullable: true
          description: Direction of movement in degrees (0–360)
      required:
        - lon
        - lat
        - utc
    MatchedEdge:
      type: object
      description: Road segment used in a matched route
      properties:
        edge_id:
          type: integer
        distance:
          type: number
          format: double
          description: Length of this edge
        geometry:
          type: string
          description: WKT `LINESTRING` describing the segment geometry
    MatchedQueryPoint:
      type: object
      description: Original query point with matched location information
      properties:
        lon:
          type: number
          format: double
        lat:
          type: number
          format: double
        lon_matched:
          type: number
          format: double
          description: Corrected longitude snapped to the road network
        lat_matched:
          type: number
          format: double
          description: Corrected latitude snapped to the road network
        edge_id:
          type: integer
          description: Identifier of the matched road segment
        utc:
          type: integer
        speed:
          type: number
          format: double
          nullable: true
        azimuth:
          type: number
          format: double
          nullable: true
    GnssLocation:
      type: object
      description: GNSS (GPS) location of the device at capture time
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        horizontalAccuracyM:
          type: number
          format: double
          description: Horizontal accuracy radius in meters
    MobileNetwork:
      type: object
      description: Observed cellular network parameters
      properties:
        homeMobileCountryCode:
          type: integer
          description: Mobile Country Code (MCC)
        homeMobileNetworkCode:
          type: integer
          description: Mobile Network Code (MNC)
        cellTowers:
          type: array
          description: List of nearby cell towers【687840751713957†L248-L255】
          items:
            $ref: '#/components/schemas/CellTower'
    CellTower:
      type: object
      description: Information about a single observed cell tower
      properties:
        cellID:
          type: integer
        networkType:
          type: string
          description: Cellular network type (e.g., `lte`, `gsm`)
        locationAreaCode:
          type: integer
        signalStrengthDBm:
          type: integer
        ageMs:
          type: integer
          description: Age of the measurement in milliseconds
    WifiAccessPoint:
      type: object
      description: Information about a single observed Wi‑Fi access point【687840751713957†L248-L263】
      properties:
        macAddress:
          type: string
          description: MAC address of the Wi‑Fi access point
        signalStrengthDBm:
          type: integer
        ageMs:
          type: integer
          description: Age of the measurement in milliseconds